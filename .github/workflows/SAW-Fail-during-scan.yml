name: Snyk API & Web CICD Block During

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PROBELY_API_KEY: ${{ secrets.PROBELY_API_KEY }}
      TARGET_ID: ${{ vars.TARGET_ID }}

    steps:
      # Step 1: Install Probely CLI
      - name: Install Probely CLI
        run: |
          # Install Probely CLI
          pip install probely
          # Get a list of targets
          probely targets get
      # Step 2: Start scan with scan ID
      - name: Start Scan
        run: |
          # Start a scan with Target ID variable and save Scan ID
          probely targets start-scan $TARGET_ID
          # Get Scan ID
          SCAN_ID=$(probely scans get --f-target $TARGET_ID -o JSON | jq -r '.[0].id')
          echo "SCAN_ID=$SCAN_ID" >> $GITHUB_ENV
      
        
      # Step 4: Abort the pipeline immediately if the first HIGH risk vulnerability is found.
      - name: Fail on First High Risk Vulnerability
        run: |
          SCAN_ID="${{ env.SCAN_ID }}"
          SCAN_STATUS="running"
          
          echo "Starting continuous check for Scan ID: $SCAN_ID"
          echo "Will fail immediately upon finding the first high-risk vulnerability, regardless of scan status."

          # Loop continues until scan is finished, failed, or a high is found.
          while [ "$SCAN_STATUS" != "finished" ] && [ "$SCAN_STATUS" != "failed" ]; do
            
            echo "--- Checking scan results (Waiting 30 seconds...) ---"
            
            # 1. Wait for 30 seconds before the next check
            sleep 30
            
            # 2. Get the current scan status and findings count
            SCAN_DATA=$(probely scans get "$SCAN_ID" -o JSON)
            SCAN_STATUS=$(echo "$SCAN_DATA" | jq -r '.status')
            # Use 'tonumber' to safely convert 'null' (when running) to 0 for comparison
            HIGH_VULNS=$(echo "$SCAN_DATA" | jq -r '.highs | tonumber')
            
            echo "Current Status: $SCAN_STATUS. High Risk Vulnerabilities found so far: $HIGH_VULNS"
            
            # 3. IMMEDIATE CHECK: Check for high vulnerabilities
            # This check runs even if the scan is still in the 'running' status.
            if [ "$HIGH_VULNS" -gt 0 ]; then
              echo "üö® High risk vulnerabilities ($HIGH_VULNS) detected! Failing pipeline immediately."
              exit 1 # Fails the GitHub Action step
            fi

            # 4. Check for scan failure, and exit gracefully if it finishes clean
            if [ "$SCAN_STATUS" == "failed" ]; then
              echo "‚ùå Scan failed during execution. Failing pipeline."
              exit 1
            elif [ "$SCAN_STATUS" == "finished" ]; then
              # This only runs if the loop condition is met (finished) and no highs were found.
              echo "‚úÖ Scan finished successfully. No high risk vulnerabilities found."
            fi
            
          done
            echo "No high risk vulnerabilities found.
